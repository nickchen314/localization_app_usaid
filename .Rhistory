labs(title = "USAID Contract Obligations By Fiscal Year", subtitle = "Data from USASpending Prime Contracts", fill = "Contract Recipient Country") +
xlab("Fiscal Year") +
ylab("Contract Obligations ($bn)") +
ggthemes::theme_economist() +
ggthemes::scale_color_economist() +
theme(legend.text = element_text(size=7),
legend.title = element_text(size=7),
axis.text.x = element_text(size = 7, angle = 45, vjust = 1, hjust=1),
axis.title.y = element_text(vjust = 1, hjust=1))
ggplot(data = final_df, aes(x = action_date_fiscal_year, y = tot_ob, fill = recipient_country_code, label = scales::percent(prop, accuracy = .1))) +
geom_col(position = "dodge") +
geom_text(position = position_dodge(width = .9),
vjust = -0.7,
size = 1.8) +
scale_y_continuous(labels = scales::dollar_format(scale = .000000001, suffix = "bn"), n.breaks = 10) +
scale_x_continuous(breaks = c(2008:2024)) +
labs(title = "USAID Contract Obligations By Fiscal Year", subtitle = "Data from USASpending Prime Contracts", fill = "Contract Recipient Country") +
xlab("Fiscal Year") +
ylab("Contract Obligations ($bn)") +
ggthemes::theme_economist() +
ggthemes::scale_color_economist() +
theme(legend.text = element_text(size=7),
legend.title = element_text(size=7),
axis.text.x = element_text(size = 7, angle = 45, vjust = 1, hjust=1),
axis.title.y = element_text(vjust = 2))
my_max <- function(x) max(x, na.rm = TRUE)
my_max <- function(x) max(x, na.rm = TRUE)
data("mtcars")
summary(mtcars$mpg)
nrow(mtcars)
jk
jk <- jackknife(x = mtcars$mpg, theta = my_max)
jk
library(bootstrap)
jk <- jackknife(x = mtcars$mpg, theta = my_max)
jk
table(jk$jack.values)
table(mtcars$mpg)
n <- nrow(mtcars)
jk_dot <- mean(jk$jack.values)
theta_jk <- n * max(mtcars$mpg) - (n - 1) * jk_dot
theta_jk
max(mtcars$mpg) - jk$jack.bias
my_min <- function(x) min(x, na.rm = TRUE)
jkm <- jackknife(x = mtcars$mpg, theta = my_min)
jkm
n <- nrow(mtcars)
jkm_dot <- mean(jkm$jack.values)
theta_jkm <- n * min(mtcars$mpg) - (n - 1) * jkm_dot
theta_jkm
min(mtcars$mpg) - theta_jkm
sort(mtcars$mpg)
my_var <- function(x) mean((x - mean(x, na.rm = TRUE))^2)
my_var(mtcars$mpg)
jk <- jackknife(mtcars$mpg, my_var)
jk
my_var(mtcars$mpg) - jk$jack.bias
n_samp <- 10000
bootstrap_medians <- rep(NA_real_, n_samp)
set.seed(1234)
n <- length(mtcars$mpg)
for (i in seq_along(bootstrap_medians)) {
x <- sample(mtcars$mpg, n, replace = TRUE)
bootstrap_medians[i] <- median(x, na.rm = TRUE)
}
head(bootstrap_medians, n = 10)
ggplot(tibble(bootstrap_medians), aes(bootstrap_medians)) +
geom_histogram(bins = 25)
library(ggplot2)
ggplot(tibble(bootstrap_medians), aes(bootstrap_medians)) +
geom_histogram(bins = 25)
head(bootstrap_medians, n = 10)
library(dplyr)
head(bootstrap_medians, n = 10)
ggplot(tibble(bootstrap_medians), aes(bootstrap_medians)) +
geom_histogram(bins = 25)
library(boot)
my_median <- function(x, subsample) median(x[subsample], na.rm = TRUE)
set.seed(1234)
b_out <- boot::boot(mtcars$mpg, my_median, R = 10000)
b_out
broom::tidy(b_out)
class(b_out)
b_out
quantile(b_out$t, probs = .75) - quantile(b_out$t, probs = .25)
trial <- data.frame(
patients =  c(rep(1, 22000), rep(0, 22000)), # patients (vaccine, placebo)
cases =  c(rep(1, 8), rep(0, 21992), rep(1, 162), rep(0, 21838))
)
head(trial)
ratio <-  function(data, sample) {
p1 <- sum(data[sample,]$cases == 1 & data[sample,]$patients == 0) /
sum(data[sample,]$patients == 0)
p2 <- sum(data[sample,]$cases == 1 & data[sample,]$patients == 1) /
sum(data[sample,]$patients == 1)
p1/p2 #infected placebo /infected vaccine
}
set.seed(123)
ratio(trial)
ratio(trial, sample(1:40000, 3000))
set.seed(123)
boot::boot(trial, ratio, 100)
boot::boot(trial, ratio, 100)
suppressMessages(library(ggplot2))
ggplot(data.frame(thetaHat = b_out$t), aes(thetaHat)) +
geom_histogram(bins = 50)
b_out <- boot::boot(trial, ratio, 10000)
b_out
ggplot(data.frame(thetaHat = b_out$t), aes(thetaHat)) +
geom_histogram(bins = 50)
shiny::runApp('ARC_projects/localization_app_usaid')
runApp('ARC_projects/localization_app_usaid')
freq_data <- c(92, 110, 127, 127, 162, 180, 184, 205, 240, 244)
max <- vector(mode = "double", length = 10)
for(i in seq_along(freq_data)) {
max[i] <- max(freq_data[-i])
}
pheta <- mean(max)
max
jacknife_est <- 244 * 10 - pheta*9
jacknife_est
freq_data <- c(92, 110, 127, 127, 162, 180, 184, 205, 240, 244)
min <- vector(mode = "double", length = 10)
for(i in seq_along(freq_data)) {
min[i] <- min(freq_data[-i])
}
pheta_min <- mean(min)
min
jacknife_est_min <- 92 * 10 - pheta_min*9
jacknife_est_min
p1 <- 35/59 #wo 0
p2 <- 34/59 #wo 1
jacknife_traffic_est <- (60 * (35/60)) - ((25*p1 + 35*p2)/60)*59
jacknife_traffic_est
traffic_data <- c(rep(0, 35), rep(1, 20), rep(2, 5))
mean_traffic <- vector(mode = "double", length = 40)
for(i in seq_along(traffic_data)) {
mean_traffic[i] <- exp(-mean(traffic_data[-i]))
}
mean_traffic
pheta_traffic_jk <- mean(mean_traffic)
pheta_traffic <- mean(traffic_data)
jacknife_traffic_est <- (60 * (exp(-.5)) - (pheta_traffic_jk*59))
jacknife_traffic_est
exp(-.5) - jacknife_traffic_est
X <- c(rep(0, 35), rep(1, 20), rep(2, 5))
phat <- function(x, subsample) {mean(x[subsample]==0)}
thetahat <- function(x, subsample) {exp(-mean(x[subsample]))}
thetajk <- function(x, subsample) {
n <- length(x)
jk_traffic <- vector(mode = "double", length = n)
for (i in seq_along(x)){
jk_traffic[i] <- exp(-mean(x[subsample][-i]))
}
(n*exp(-mean(x[subsample]))) - ((n-1)*mean(jk_traffic))
}
set.seed(123)
b_out_phat <- boot::boot(X, phat, R = 50000)
b_out_phat
set.seed(123)
b_out_thetahat <- boot::boot(X, thetahat, R = 50000)
b_out_thetahat
set.seed(123)
b_out_thetajk <- boot::boot(X, thetajk, R = 50000)
b_out_thetajk
## bias table
library(MASS)
Boston
muhat <- mean(Boston$medv)
muhat
View(Boston)
library(MASS)
muhat <- mean(Boston$medv)
muhat
std_error <- sd / sqrt(nrow(Boston))
std_error <- sd(Boston$medv)/ sqrt(nrow(Boston))
std_error
set.seed(123)
mean_se <- function(x, subsample) {mean(x[subsample]) / sqrt(length(x[subsample]))}
b_out_se <- boot::boot(Boston$medv, mean_se, R = 10000)
b_out_se
mean <- function(x, subsample) {mean(x[subsample])}
b_out <- boot::boot(Boston$medv, mean, R = 10000)
b_out
set.seed(123)
mean <- function(x, subsample) {mean(x[subsample])}
b_out <- boot::boot(Boston$medv, mean, R = 10000)
b_out
set.seed(123)
mean <- function(x, subsample) {mean(x[subsample])}
b_out <- boot::boot(Boston$medv, mean, R = 10000)
b_out
set.seed(123)
mean_jk <- function(x, subsample) {mean(x[subsample])}
b_out <- boot::boot(Boston$medv, mean_jk, R = 10000)
b_out
set.seed(123)
mean_jk <- function(x, subsample) {mean(x[subsample])}
b_out <- boot::boot(Boston$medv, mean_jk, R = 10000)
b_out
mean_jk <- function(x, subsample) {mean(x[subsample])}
b_out <- boot::boot(Boston$medv, mean_jk, R = 10000)
set.seed(123)
mean_jk <- function(x, subsample) {mean(x[subsample])}
b_out <- boot::boot(Boston$medv, mean_jk, R = 1000)
b_out
set.seed(123)
mean_jk <- function(x, subsample) {mean(x[subsample])}
b_out <- boot::boot(Boston$medv, mean_jk, R = 100)
b_out
freq_data <- c(92, 110, 127, 127, 162, 180, 184, 205, 240, 244)
max <- vector(mode = "double", length = 10)
for(i in seq_along(freq_data)) {
max[i] <- max(freq_data[-i])
}
pheta <- mean(max)
max
jacknife_est <- 244 * 10 - pheta*9
jacknife_est
freq_data <- c(92, 110, 127, 127, 162, 180, 184, 205, 240, 244)
min <- vector(mode = "double", length = 10)
for(i in seq_along(freq_data)) {
min[i] <- min(freq_data[-i])
}
pheta_min <- mean(min)
min
jacknife_est_min <- 92 * 10 - pheta_min*9
jacknife_est_min
p1 <- 35/59 #wo 0
p2 <- 34/59 #wo 1
jacknife_traffic_est <- (60 * (35/60)) - ((25*p1 + 35*p2)/60)*59
jacknife_traffic_est
traffic_data <- c(rep(0, 35), rep(1, 20), rep(2, 5))
mean_traffic <- vector(mode = "double", length = 40)
for(i in seq_along(traffic_data)) {
mean_traffic[i] <- exp(-mean(traffic_data[-i]))
}
mean_traffic
pheta_traffic_jk <- mean(mean_traffic)
pheta_traffic <- mean(traffic_data)
jacknife_traffic_est <- (60 * (exp(-.5)) - (pheta_traffic_jk*59))
jacknife_traffic_est
exp(-.5) - jacknife_traffic_est
X <- c(rep(0, 35), rep(1, 20), rep(2, 5))
phat <- function(x, subsample) {mean(x[subsample]==0)}
thetahat <- function(x, subsample) {exp(-mean(x[subsample]))}
thetajk <- function(x, subsample) {
n <- length(x)
jk_traffic <- vector(mode = "double", length = n)
for (i in seq_along(x)){
jk_traffic[i] <- exp(-mean(x[subsample][-i]))
}
(n*exp(-mean(x[subsample]))) - ((n-1)*mean(jk_traffic))
}
set.seed(123)
b_out_phat <- boot::boot(X, phat, R = 50000)
b_out_phat
set.seed(123)
b_out_thetahat <- boot::boot(X, thetahat, R = 50000)
b_out_thetahat
set.seed(123)
b_out_thetajk <- boot::boot(X, thetajk, R = 50000)
b_out_thetajk
library(MASS)
muhat <- mean(Boston$medv)
muhat
std_error <- sd(Boston$medv)/ sqrt(nrow(Boston))
std_error
set.seed(123)
mean_jk <- function(x, subsample) {mean(x[subsample])}
b_out <- boot::boot(Boston$medv, mean_jk, R = 100)
b_out
set.seed(123)
mean_jk <- function(x, subsample) {mean(x[subsample])}
b_out <- boot::boot(Boston$medv, mean_jk, R = 10000)
b_out
View(b_out)
b_out$t0
b_out$t
b_out$R
b_out$statistic()
confint <- c(22.53281 - 2 * (.4088195), 22.53281 + 2 * (.4088195))
confint
t.test(Boston$medv)
set.seed(123)
mean_bt <- function(x, subsample) {mean(x[subsample])}
b_out <- boot::boot(Boston$medv, mean_bt, R = 10000)
b_out
set.seed(123)
median_bt <- function(x, subsample) {median(x[subsample])}
b_out_med <- boot::boot(Boston$medv, median_jk, R = 10000)
set.seed(123)
median_bt <- function(x, subsample) {median(x[subsample])}
b_out_med <- boot::boot(Boston$medv, median_bt, R = 10000)
b_out_med
median(Boston$medv)
vif(lm(mpg ~ ., data = mtcars))
library(car)
vif(lm(mpg ~ ., data = mtcars))
vif(lm(mpg ~ ., data = mtcars[-1]))
vif(lm(mpg ~ ., data = mtcars[-1]))
vif(lm(mpg ~ ., data = mtcars))
vif(lm(mpg ~ ., data = mtcars[-disp]))
vif(lm(mpg ~ ., data = mtcars[-3]))
suppressMessages(library(tidyverse))
home <- read_csv("https://raw.githubusercontent.com/rressler/data_raw_courses/main/HOME_SALES.csv")
glimpse(home)
library(leaps)
install.packages(leaps)
install.packages("leaps")
library(car)
reg <- lm(SALES_PRICE ~ . -ID, data = home)
vif(reg)
reg_ex <- regsubsets(SALES_PRICE ~ . - ID, data = home)
summary(reg_ex)
reg_ex <- regsubsets(SALES_PRICE ~ . - ID, data = home)
library(leaps)
reg_ex <- regsubsets(SALES_PRICE ~ . - ID, data = home)
summary(reg_ex)
summary(reg_ex)
summary(reg_ex)$which
summary(reg_ex)$rsq
summary(reg_ex)$adjr2
suppressMessages(library(tidyverse))
df <- data.frame(adjR2 = reg_ex_summary$adjr2, nvar = 1:length(reg_ex_summary$adjr2))
ggplot(df, (aes(nvar, adjR2))) +
geom_line()
df <- data.frame(adjR2 = reg_ex_summary$adjr2, nvar = 1:length(reg_ex_summary$adjr2))
names(reg_ex_summary)
reg_ex_summary <- summary(reg_ex)
names(reg_ex_summary)
summary(reg_ex)$adjr2
df <- data.frame(adjR2 = reg_ex_summary$adjr2, nvar = 1:length(reg_ex_summary$adjr2))
ggplot(df, (aes(nvar, adjR2))) +
geom_line()
which.max(reg_ex_summary$adjr2)
reg_ex <- regsubsets(SALES_PRICE ~ . - ID, data = home)
reg_ex <- regsubsets(SALES_PRICE ~ . - ID, data = home, nvmax = 12)
reg_ex_summary <- summary(reg_ex)
names(reg_ex_summary)
summary(reg_ex)$adjr2
df <- data.frame(adjR2 = reg_ex_summary$adjr2, nvar = 1:length(reg_ex_summary$adjr2))
ggplot(df, (aes(nvar, adjR2))) +
geom_line()
which.max(reg_ex_summary$adjr2)
reg_ex_summary$which[10,][-1] # drop the intercept term
round(reg_ex_summary$bic,0)
which.min(reg_ex_summary$bic) # The best by BIC
round(reg_ex_summary$cp, 2)
which.min(abs(reg_ex_summary$cp - 1:12)) # The best by Cp
ggplot(data.frame(x = 1:12, Cp = reg_ex_summary$cp), aes(x, Cp)) +
geom_point() +
xlab("Number of variables in the model, including dummy variables") +
geom_abline(slope = 1, intercept  = 0, color = "red", lty = 2)  +
ylim(0, 12) + scale_x_continuous(breaks = seq(0, 11, by = 1))
ggplot(data.frame(x = 1:12, Cp = reg_ex_summary$cp), aes(x, Cp)) +
geom_point() +
xlab("Number of variables in the model, including dummy variables") +
geom_abline(slope = 1, intercept  = 0, color = "red", lty = 2)  +
ylim(0, 12) + scale_x_continuous(breaks = seq(0, 11, by = 1))
reg_full <- lm(SALES_PRICE ~ . -ID, data = home)
reg_null <- lm(SALES_PRICE ~ 1, data = home)
step_out <- step(reg_null,
scope = list(lower = reg_null, upper = reg_full),
method = "forward")
step_out <- step(reg_null,
scope = c(lower = reg_null, upper = reg_full),
method = "forward")
step_out <- step(reg_null,
scope = c(lower = reg_null, upper = reg_full),
method = "forward")
step_out <- step(reg_null,
scope = list(lower = reg_null, upper = reg_full),
method = "forward")
#| echo: fenced
#| label: create-data
#| include: true
#| eval: true
set.seed(123)
n <- 100
x1 <- runif(n)
x2 <- 0.5 * x1 + rnorm(n) / 10
y <- 2 + 3 * x1 + 0.2 * x2 + rnorm(n)
var_x1 <- ((1 - 0)^2) / 12
var_x1
var_x2 <- .25*var_x1 + 1/100
var_x2
cov = var_x1 * var_x2
cov
corr = cov / (sqrt(var_x1) * sqrt(var_x2))
corr
boot::corr(data.frame(x1 = x1, x2 = x2))
library(ggplot2)
ggplot(data = data.frame(x1 = x1, x2 = x2)) +
geom_point(aes(x = x1, y = x2)) +
labs(title = "x2 vs x1")
#| echo: fenced
x1p <- c(x1, 0.1)
x2p <- c(x2, 0.8)
yp <- c(y, 6)
#| message: false
library(ISLR2)
library(leaps)
library(tidyverse)
glimpse(College)
reg_ex <- regsubsets(Apps ~ ., data = College, nvmax = ncol(College) - 1)
reg_ex_summary <- summary(reg_ex)
## R^2
which.max(reg_ex_summary$adjr2)
df <- data.frame(adjR2 = reg_ex_summary$adjr2, nvar = 1:length(reg_ex_summary$adjr2))
ggplot(df, (aes(nvar, adjR2))) +
geom_line()
## BIC
which.min(reg_ex_summary$bic)
df <- data.frame(bic = reg_ex_summary$bic, nvar = 1:length(reg_ex_summary$adjr2))
ggplot(df, (aes(nvar, bic))) +
geom_line()
##mallows
which.min(abs(reg_ex_summary$cp - 1:17))
df <- data.frame(cp = reg_ex_summary$cp, nvar = 1:length(reg_ex_summary$adjr2))
ggplot(df, (aes(nvar, cp))) +
geom_point() +
geom_abline(slope = 1, intercept  = 0, color = "red", lty = 2)  +
ylim(0, 17) +
scale_x_continuous(breaks = seq(0, 20, by = 1))
## stepwise
reg_full <- lm(Apps ~ . , data = College)
reg_null <- lm(Apps ~ 1, data = College)
step_out <- step(reg_full,
scope = list(lower = reg_null, upper = reg_full),
method = "backward")
step_out
reg_ex_summary$which[10,]
library(boot)
set.seed(123)
reg <- glm(formula = Apps ~ Private + Accept + Enroll + Top10perc + Top25perc +
F.Undergrad + P.Undergrad + Outstate + Room.Board + PhD +
Expend + Grad.Rate, data = College)
regCV <- cv.glm(College, reg, K = 10)
regCV$delta
summary(reg)
set.seed(123)
reg_2 <- glm(formula = Apps ~ Private + Accept + Enroll + Top10perc + Top25perc +
Outstate + Room.Board + PhD + Expend + Grad.Rate, data = College)
regCV_red <- cv.glm(College, reg_2, K = 10)
regCV_red$delta
aout <- anova(reg_2, reg, test = "Chisq")
aout
cov = var_x1 * .25*var_x1
corr = cov / (sqrt(var_x1) * sqrt(var_x2))
corr
cov = sqrt(var_x1) * sqrt(.25*var_x1)
cov = sqrt(var_x1) * sqrt(.25*var_x1)
cov
corr = cov / (sqrt(var_x1) * sqrt(var_x2))
corr
reg <- lm(y ~ x1 + x2)
reg
summary(reg)
reg_red <- lm(y ~ x1)
reg_red
summary(reg_red)
reg_redx2 <- lm(y ~ x2)
reg_redx2
summary(reg_redx2)
#| echo: fenced
x1p <- c(x1, 0.1)
x2p <- c(x2, 0.8)
yp <- c(y, 6)
reg_new <- lm(yp ~ x1p + x2p)
reg_new
summary(reg_new)
reg_newx1 <- lm(yp ~ x1p)
summary(reg_newx1)
reg_newx1 <- lm(yp ~ x2p)
summary(reg_newx2)
reg_newx2 <- lm(yp ~ x2p)
summary(reg_newx2)
reg_newx2 <- lm(yp ~ x2p)
summary(reg_newx2)
corr = cov / (sqrt(var_x1) * sqrt(var_x2))
corr = cov / (sqrt(var_x1) * sqrt(var_x2))
vif <- 1 / (1 - corr)
vif
vif <- 1 / (1 - corr^2)
corr = cov / (sqrt(var_x1) * sqrt(var_x2))
vif <- 1 / (1 - corr^2)
vif
vif(reg)
library(car)
vif(reg)
1/3.1
sqrt(.68)
library(readr)
project_data <- read_csv("DATA427_ML/427_project/project_data.csv")
View(project_data)
names(project_data)
(project_data$`Country Name`)
unique(project_data$`Country Name`)
names(project_data)
sum(is.na(project_data))
colSums(is.na(project_data$))
colSums(is.na(project_data))
sum(is.na(project_data))
class(project_data)
class(project_data[1;@4])
class(project_data[1:24])
class(project_data[1:24])
class(project_data[1:23])
class(project_data$`Country Name`)
shiny::runApp('ARC_projects/localization_app_usaid')
runApp('ARC_projects/localization_app_usaid')
